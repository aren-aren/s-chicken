<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.groups.schicken.erp.order.OrderMapper">
    <sql id="search">
        <where>
            <if test="id != null">
                ord.id = #{id}
            </if>
            <if test="supplier != null and supplier.id != null">
                AND sup.id = #{supplier.id}
            </if>
            <if test="supplier != null and supplier.name != null">
                AND sup.name LIKE CONCAT('%',#{supplier.name},'%')
            </if>
            <if test="employee != null and employee.name != null">
                AND emp.name LIKE CONCAT('%',#{employee.name},'%')
            </if>
        </where>
    </sql>
    <resultMap id="getOrderMap" type="OrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <association property="supplier" javaType="SupplierVO" columnPrefix="supplier_" autoMapping="true"/>
        <association property="employee" javaType="EmployeeVO" columnPrefix="employee_" autoMapping="true"/>
        <collection property="orderItems" javaType="List" ofType="OrderItemVO" columnPrefix="order_item_" autoMapping="true">
            <id column="id" property="id"/>
            <association property="item" javaType="ItemVO" columnPrefix="item_" autoMapping="true">
                    <association property="product" javaType="ProductVO" columnPrefix="product_" autoMapping="true"/>
            </association>
        </collection>
    </resultMap>
    <select id="getOrderList" resultMap="getOrderMap">
        SELECT
            ord.*,
            sup.name supplier_name,
            sup.owner_name supplier_owner_name,
            sup.address supplier_address,
            sup.address_detail supplier_address_detail,
            sup.contact_number supplier_contact_number,
            sup.registration_number supplier_registration_number,
            sup.email supplier_email,
            sup.contract_date supplier_contract_date,
            emp.name employee_name,
            order_item.id order_item_id,
            order_item.item_id order_item_item_id,
            order_item.order_id order_item_order_id,
            order_item.quantity order_item_quantity,
            order_item.deliver_quantity order_item_deliver_quantity,
            order_item.status order_item_status,
            order_item.price order_item_price,
            order_item.comment order_item_comment,
            item.id item_id,
            item.contract_price item_contract_price,
            prd.id order_item_item_product_id,
            prd.name order_item_item_product_name,
            prd.standard order_item_item_product_standard,
            prd.sell_price order_item_item_product_sell_price,
            unit_id order_item_item_product_unit_id,
            unit.name order_item_item_product_unit_name
        FROM
            head_order ord
        LEFT JOIN
            supplier sup
            ON ord.supplier_id = sup.id
        LEFT JOIN
            employee emp
            ON ord.employee_id = emp.id
        LEFT JOIN
            head_order_item order_item
            ON ord.id = order_item.order_id
        LEFT JOIN
            item
            ON order_item.item_id = item.id
        LEFT JOIN
            product prd
            ON item.product_id = prd.id
        LEFT JOIN
            code unit
            ON prd.unit_id = unit.id and unit.type_id = '500'
        <include refid="search"/>
        ORDER BY ord.order_date desc
    </select>
    <resultMap id="getOrderDetailMap" type="OrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <id column="supplier_id" property="supplier.id"/>
        <association property="supplier" javaType="SupplierVO" columnPrefix="supplier_" autoMapping="true"/>
        <collection property="orderItems" javaType="List" ofType="OrderItemVO" columnPrefix="order_item_" autoMapping="true">
            <id column="id" property="id"/>
            <id column="supplier_id" property="supplier.id"/>
            <association property="item" javaType="ItemVO" columnPrefix="item_" autoMapping="true">
                <association property="product" javaType="ProductVO" columnPrefix="product_" autoMapping="true">
                    <association property="unit" javaType="CodeVO" columnPrefix="unit_" autoMapping="true"/>
                    <association property="category" javaType="CodeVO" columnPrefix="category_" autoMapping="true"/>
                </association>
            </association>
        </collection>
    </resultMap>
    <select id="getOrderDetail" resultMap="getOrderDetailMap">
        SELECT
        ord.*,
        sup.name supplier_name,
        sup.owner_name supplier_owner_name,
        sup.address supplier_address,
        sup.address_detail supplier_address_detail,
        sup.contact_number supplier_contact_number,
        sup.registration_number supplier_registration_number,
        sup.email supplier_email,
        sup.contract_date supplier_contract_date,
        emp.name employee_name,
        order_item.id order_item_id,
        order_item.item_id order_item_item_id,
        order_item.supplier_id order_item_supplier_id,
        order_item.order_id order_item_order_id,
        order_item.quantity order_item_quantity,
        order_item.deliver_quantity order_item_deliver_quantity,
        order_item.status order_item_status,
        order_item.price order_item_price,
        order_item.comment order_item_comment,
        item.id item_id,
        item.contract_price item_contract_price,
        prd.id order_item_item_product_id,
        prd.name order_item_item_product_name,
        prd.standard order_item_item_product_standard,
        prd.sell_price order_item_item_product_sell_price,
        unit_id order_item_item_product_unit_id,
        unit.name order_item_item_product_unit_name,
        cat.id order_item_item_product_category_id,
        cat.name order_item_item_product_category_name
        FROM
        head_order ord
        LEFT JOIN
        supplier sup
        ON ord.supplier_id = sup.id
        LEFT JOIN
        employee emp
        ON ord.employee_id = emp.id
        LEFT JOIN
        head_order_item order_item
        ON ord.id = order_item.order_id AND ord.supplier_id = order_item.supplier_id
        LEFT JOIN
        item
        ON order_item.item_id = item.id
        LEFT JOIN
        product prd
        ON item.product_id = prd.id
        LEFT JOIN
        code unit
        ON prd.unit_id = unit.id and unit.type_id = '500'
        LEFT JOIN
        code cat
        ON prd.category_id = cat.id and cat.type_id = '600'
        <include refid="search"/>
        ORDER BY ord.order_date desc
    </select>
    <resultMap id="getOrderSheetMap" type="OrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <id column="supplier_id" property="supplier.id"/>
        <association property="employee" javaType="EmployeeVO" columnPrefix="employee_" autoMapping="true"/>
        <association property="supplier" javaType="SupplierVO" columnPrefix="supplier_" autoMapping="true"/>
        <collection property="orderItems" javaType="List" ofType="OrderItemVO" columnPrefix="order_item_" autoMapping="true">
            <id column="id" property="id"/>
            <id column="supplier_id" property="supplier.id"/>
            <association property="item" javaType="ItemVO" columnPrefix="item_" autoMapping="true">
                <association property="product" javaType="ProductVO" columnPrefix="product_" autoMapping="true">
                    <association property="unit" javaType="CodeVO" columnPrefix="unit_" autoMapping="true"/>
                    <association property="category" javaType="CodeVO" columnPrefix="category_" autoMapping="true"/>
                </association>
            </association>
        </collection>
    </resultMap>
    <select id="getOrderSheet" resultMap="getOrderSheetMap">
        SELECT
            ord.*,
            sup.name supplier_name,
            sup.owner_name supplier_owner_name,
            sup.address supplier_address,
            sup.address_detail supplier_address_detail,
            sup.contact_number supplier_contact_number,
            sup.registration_number supplier_registration_number,
            sup.email supplier_email,
            sup.contract_date supplier_contract_date,
            emp.name employee_name,
            emp.phone_number employee_phoneNumber,
            order_item.id order_item_id,
            order_item.item_id order_item_item_id,
            order_item.supplier_id order_item_supplier_id,
            order_item.order_id order_item_order_id,
            order_item.quantity order_item_quantity,
            order_item.deliver_quantity order_item_deliver_quantity,
            order_item.status order_item_status,
            order_item.price order_item_price,
            order_item.comment order_item_comment,
            item.id item_id,
            item.contract_price item_contract_price,
            prd.id order_item_item_product_id,
            prd.name order_item_item_product_name,
            prd.standard order_item_item_product_standard,
            prd.sell_price order_item_item_product_sell_price,
            unit_id order_item_item_product_unit_id,
            unit.name order_item_item_product_unit_name,
            cat.id order_item_item_product_category_id,
            cat.name order_item_item_product_category_name
        FROM
            head_order ord
        LEFT JOIN
            supplier sup
            ON ord.supplier_id = sup.id
        LEFT JOIN
            employee emp
            ON ord.employee_id = emp.id
        LEFT JOIN
            head_order_item order_item
            ON ord.id = order_item.order_id AND ord.supplier_id = order_item.supplier_id
        LEFT JOIN
            item
            ON order_item.item_id = item.id
        LEFT JOIN
            product prd
            ON item.product_id = prd.id
        LEFT JOIN
            code unit
            ON prd.unit_id = unit.id and unit.type_id = '500'
        LEFT JOIN
            code cat
            ON prd.category_id = cat.id and cat.type_id = '600'
        WHERE
            ord.id = #{id} AND ord.supplier_id = #{supplier.id}
        ORDER BY ord.order_date desc
    </select>
    <insert id="addOrder">
        INSERT INTO
            head_order
            (id, supplier_id, status, address, order_date, employee_id, price)
        VALUES
            (#{id}, #{supplier.id}, 0, #{address}, #{orderDate}, #{employee.id}, #{price})
    </insert>

    <insert id="addOrderItem">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT nextval(seq1)
        </selectKey>
        INSERT INTO
            head_order_item
            (id, supplier_id, item_id, order_id, quantity, deliver_quantity, status, comment, price)
        VALUES
            (#{id}, #{supplier.id}, #{item.id}, #{order.id}, #{quantity}, 0, #{status}, #{comment}, #{price})
    </insert>
    <select id="getId">
        SELECT nextval(seq1)
    </select>
</mapper>