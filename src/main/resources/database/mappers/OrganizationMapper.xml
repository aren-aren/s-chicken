<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.groups.schicken.organization.OrganizationDAO">
    <sql id="hierarchical_query">
        WITH RECURSIVE OC AS (
            SELECT
                  id AS "id"
                , name "text"
                , upper_id AS "parent"
                , 'dept' AS "type"
                , 1 AS depth
                , d.sort
            FROM department d
            WHERE upper_id IS NULL

            UNION ALL

            SELECT
                  dept.id AS "id"
                , dept.name "text"
                , dept.upper_id "parent"
                , 'dept' AS "type"
                , 1 + depth AS depth
                , dept.sort
            FROM department dept
                INNER JOIN OC ON dept.upper_id = OC.id AND OC.type = 'dept'
        )
    </sql>
    <select id="getOrgChart">
        <include refid="hierarchical_query"></include>
        SELECT * FROM (
            SELECT
                  o.id
                , o.text
                , NVL(o.parent, '#') AS "parent"
                , o.type
                , o.depth
                , o.sort
            FROM OC o

            UNION

            SELECT
                  e.id
                , concat(code.name ,' ', e.name) "text"
                , e.department_id "parent"
                , 'person' AS "type"
                , OC.depth + 1 AS depth
                , 100 - CAST(code.id AS INTEGER) AS "sort"
            FROM employee e
                INNER JOIN OC ON e.department_id = OC.id
                INNER JOIN code ON e.pos_id = code.id AND code.type_id = '300'
        ) uoc
        ORDER BY uoc.depth, uoc.type desc, sort
    </select>

    <select id="getEmployeesByDepartmentId" resultType="OrganizationVO">
        SELECT
              e.id
            , concat(d.name,' ',c.name,' ',e.name) AS "text"
            , d.id AS "parent"
            , c.id AS "sort"
        FROM employee e
            INNER JOIN code c ON c.id = e.pos_id AND c.type_id = '300'
            INNER JOIN department d ON d.id = e.department_id
        WHERE
            d.id = #{deptId}
        ORDER BY sort desc
    </select>

    <select id="getEmployeeByEmployeeId" resultType="OrganizationVO">
        SELECT
              e.id
            , concat(d.name,' ',c.name,' ',e.name) AS "text"
            , d.id AS "parent"
            , c.id AS "sort"
        FROM employee e
            INNER JOIN code c ON c.id = e.pos_id AND c.type_id = '300'
            INNER JOIN department d ON d.id = e.department_id
        WHERE
            e.id = #{empId}
        ORDER BY sort desc
    </select>
</mapper>
