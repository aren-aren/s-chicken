<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.groups.schicken.erp.order.HeadOrderMapper">
    <sql id="search">
        <where>
            <if test="status != null and status != 4 and status != 5 and status != 6">
                ord.status = #{status}
            </if>
            <if test="status != null and status == 4">
                AND ord.status IN (0,1,2)
            </if>
            <if test="status != null and status == 5">
                AND ord.status IN (1,2)
            </if>
            <if test="status != null and status == 6">
                AND ord.status IN (0,1)
            </if>
            <if test="id != null">
                AND ord.id = #{id}
            </if>
            <if test="supplier != null and supplier.id != null">
                AND sup.id = #{supplier.id}
            </if>
            <if test="supplier != null and supplier.name != null">
                AND sup.name LIKE CONCAT('%',#{supplier.name},'%')
            </if>
            <if test="employee != null and employee.name != null">
                AND emp.employee_name LIKE CONCAT('%',#{employee.name},'%')
            </if>
            <if test="orderDetails != null and orderDetails[0].item != null">
                AND (ord.id, sup.id) IN
                (
                SELECT
                    oi.order_id
                    , oi.supplier_id
                FROM
                    head_order_detail oi
                LEFT JOIN
                    item i
                    ON oi.item_id = i.id
                LEFT JOIN
                    product prd
                    ON i.product_id = prd.id
                WHERE
                    prd.name LIKE CONCAT('%',#{orderDetails[0].item.product.name},'%')
                )
            </if>
            <if test="orderDetails != null and orderDetails[0].id != null">
                 AND order_detail.id = orderDetails[0].id
            </if>
            <if test="comment != null">
                AND ord.comment LIKE CONCAT('%',#{comment},'%')
            </if>
        </where>
    </sql>
    <sql id="getOrderSQL">
        SELECT
            ord.*,
            sup.name supplier_name,
            sup.owner_name supplier_owner_name,
            sup.address supplier_address,
            sup.address_detail supplier_address_detail,
            sup.contact_number supplier_contact_number,
            sup.registration_number supplier_registration_number,
            sup.email supplier_email,
            sup.contract_date supplier_contract_date,
            emp.*,
            order_detail.id order_detail_id,
            order_detail.item_id order_detail_item_id,
            order_detail.supplier_id order_detail_supplier_id,
            order_detail.order_id order_detail_order_id,
            order_detail.quantity order_detail_quantity,
            order_detail.deliver_quantity order_detail_deliver_quantity,
            order_detail.status order_detail_status,
            order_detail.price order_detail_price,
            order_detail.comment order_detail_comment,
            item.id item_id,
            item.contract_price item_contract_price,
            prd.id order_detail_item_product_id,
            prd.name order_detail_item_product_name,
            prd.standard order_detail_item_product_standard,
            prd.sell_price order_detail_item_product_sell_price,
            unit.id order_detail_item_product_unit_id,
            unit.name order_detail_item_product_unit_name,
            cat.id order_detail_item_product_category_id,
            cat.name order_detail_item_product_category_name
        FROM
            head_order ord
        LEFT JOIN
            supplier sup
            ON ord.supplier_id = sup.id
        LEFT JOIN
            view_employee emp
            ON ord.employee_id = emp.employee_id
        LEFT JOIN
            head_order_detail order_detail
            ON ord.id = order_detail.order_id AND ord.supplier_id = order_detail.supplier_id
        LEFT JOIN
            item
            ON order_detail.item_id = item.id
        LEFT JOIN
            product prd
            ON item.product_id = prd.id
        LEFT JOIN
            view_unit unit
            ON prd.unit_id = unit.id
        LEFT JOIN
            view_category cat
            ON prd.category_id = cat.id
        <include refid="search"/>
        ORDER BY
            ord.write_date desc
    </sql>
    <select id="getOrderList" resultMap="getOrderMap">
        <include refid="getOrderSQL"/>
    </select>
    <resultMap id="getOrderMap" type="HeadOrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <association property="supplier" javaType="SupplierVO" columnPrefix="supplier_" autoMapping="true"/>
        <association property="employee" javaType="EmployeeVO" columnPrefix="employee_" autoMapping="true">
            <association property="position" javaType="CodeVO" columnPrefix="position_" autoMapping="true"/>
            <association property="department" javaType="DepartmentVO" columnPrefix="department_" autoMapping="true"/>
        </association>
        <collection property="orderDetails" javaType="List" ofType="HeadOrderDetailVO" columnPrefix="order_detail_" autoMapping="true">
            <id column="id" property="id"/>
            <id column="supplier_id" property="supplier.id"/>
            <association property="item" javaType="ItemVO" columnPrefix="item_" autoMapping="true">
                <association property="product" javaType="ProductVO" columnPrefix="product_" autoMapping="true">
                    <association property="unit" javaType="CodeVO" columnPrefix="unit_" autoMapping="true"/>
                    <association property="category" javaType="CodeVO" columnPrefix="category_" autoMapping="true"/>
                </association>
            </association>
        </collection>
    </resultMap>
    <resultMap id="getOrderSupMap" type="HeadOrderVO" autoMapping="true">
        <id column="id" property="id"/>
        <id column="supplier_id" property="supplier.id"/>
        <association property="supplier" javaType="SupplierVO" columnPrefix="supplier_" autoMapping="true"/>
        <association property="employee" javaType="EmployeeVO" columnPrefix="employee_" autoMapping="true">
            <association property="position" javaType="CodeVO" columnPrefix="position_" autoMapping="true"/>
            <association property="department" javaType="DepartmentVO" columnPrefix="department_" autoMapping="true"/>
        </association>
        <collection property="orderDetails" javaType="List" ofType="HeadOrderDetailVO" columnPrefix="order_detail_" autoMapping="true">
            <id column="id" property="id"/>
            <id column="supplier" property="supplier.id"/>
            <association property="item" javaType="ItemVO" columnPrefix="item_" autoMapping="true">
                <association property="product" javaType="ProductVO" columnPrefix="product_" autoMapping="true">
                    <association property="unit" javaType="CodeVO" columnPrefix="unit_" autoMapping="true"/>
                    <association property="category" javaType="CodeVO" columnPrefix="category_" autoMapping="true"/>
                </association>
            </association>
        </collection>
    </resultMap>
    <select id="getOrder" resultMap="getOrderMap">
        <include refid="getOrderSQL"/>
    </select>
    <select id="getOrderSupList" resultMap="getOrderSupMap">
        <include refid="getOrderSQL"/>
    </select>
    <insert id="addOrder">
        INSERT INTO
            head_order
            (id, supplier_id, status, address, write_date, employee_id, price, comment)
        VALUES
            (#{id}, #{supplier.id}, 0, #{address}, #{writeDate}, #{employee.id}, #{price}, #{comment})
    </insert>

    <insert id="addOrderDetail">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT nextval(seq1)
        </selectKey>
        INSERT INTO
            head_order_detail
            (id, supplier_id, item_id, order_id, quantity, deliver_quantity, status, comment, price)
        VALUES
            (#{id}, #{supplier.id}, #{item.id}, #{order.id}, #{quantity}, 0, #{status}, #{comment}, #{price})
    </insert>
    <select id="getId">
        SELECT nextval(seq1)
    </select>
    <update id="updateOrder">
        UPDATE
            head_order
        <set>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="orderDate != null">
                , order_date = #{orderDate}
            </if>
        </set>
        WHERE id = #{id} and supplier_id = #{supplier.id}
    </update>
    <update id="updateOrderDetail" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            UPDATE
                head_order_detail
            <set>
                <if test="item.status != null">
                    status = #{item.status}
                </if>
                <if test="item.deliverQuantity != null">
                    , deliver_quantity = #{item.deliverQuantity}
                </if>
                <if test="item.comment != null">
                    , comment = #{item.comment}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    <resultMap id="getOrderDetailMap" type="HeadOrderDetailVO" autoMapping="true">
        <id property="id" column="id"/>
        <association property="item" javaType="ItemVO" autoMapping="true" columnPrefix="item_">
            <association property="product" javaType="ProductVO" autoMapping="true" columnPrefix="product_"/>
        </association>
    </resultMap>
    <select id="getOrderDetail" resultMap="getOrderDetailMap">
        SELECT
            oi.*
            , i.product_id item_product_id
            , prd.name item_product_name
        FROM
            head_order_detail oi
        LEFT JOIN
            item i
            ON oi.item_id = i.id
        LEFT JOIN
            product prd
            ON i.product_id = prd.id
        WHERE
            oi.id = #{id}
    </select>
</mapper>